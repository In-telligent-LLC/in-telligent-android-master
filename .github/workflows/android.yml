name: Android CI/CD

on:
  push:
    branches:
      - development
      - quality
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Build Android Project
        run: ./gradlew assembleDebug

      - name: Run Tests
        run: ./gradlew test

      - name: Deploy to AWS (Development)
        if: github.ref == 'refs/heads/development'
        run: |
          # Comandos para implantar o aplicativo em um ambiente de desenvolvimento na AWS
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws configure set region us-east-2
          eb deploy your-development-environment-name

      - name: Deploy to Firebase (Quality)
        if: github.ref == 'refs/heads/quality'
        run: |
          # Comandos para implantar o aplicativo no Firebase para qualidade/release
          # Certifique-se de configurar as credenciais do Firebase como segredos no GitHub
          echo $FIREBASE_SERVICE_ACCOUNT_JSON > $GITHUB_WORKSPACE/serviceAccountKey.json
          firebase auth:activate-service-account --key $GITHUB_WORKSPACE/serviceAccountKey.json
          firebase use --token $FIREBASE_TOKEN
          firebase deploy --only hosting --project your-firebase-project-name

      - name: Deploy to AWS (Production)
        if: github.ref == 'refs/heads/main'
        run: |
          # Comandos para implantar o aplicativo em um ambiente de produção na AWS
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws configure set region us-east-1
          eb deploy your-production-environment-name
