// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.ui.findlocation.FindLocationMvpPresenter;
import com.sca.in_telligent.ui.findlocation.FindLocationMvpView;
import com.sca.in_telligent.ui.findlocation.FindLocationPresenter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ActivityModule_ProvideFindLocationPresenterFactory implements Factory<FindLocationMvpPresenter<FindLocationMvpView>> {
  private final ActivityModule module;

  private final Provider<FindLocationPresenter<FindLocationMvpView>> presenterProvider;

  public ActivityModule_ProvideFindLocationPresenterFactory(ActivityModule module,
      Provider<FindLocationPresenter<FindLocationMvpView>> presenterProvider) {
    this.module = module;
    this.presenterProvider = presenterProvider;
  }

  @Override
  public FindLocationMvpPresenter<FindLocationMvpView> get() {
    return provideFindLocationPresenter(module, presenterProvider.get());
  }

  public static ActivityModule_ProvideFindLocationPresenterFactory create(ActivityModule module,
      Provider<FindLocationPresenter<FindLocationMvpView>> presenterProvider) {
    return new ActivityModule_ProvideFindLocationPresenterFactory(module, presenterProvider);
  }

  public static FindLocationMvpPresenter<FindLocationMvpView> provideFindLocationPresenter(
      ActivityModule instance, FindLocationPresenter<FindLocationMvpView> presenter) {
    return Preconditions.checkNotNullFromProvides(instance.provideFindLocationPresenter(presenter));
  }
}
