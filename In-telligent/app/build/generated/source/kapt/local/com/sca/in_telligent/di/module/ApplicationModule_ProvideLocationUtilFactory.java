// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.util.AppLocationUtil;
import com.sca.in_telligent.util.LocationUtil;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ApplicationModule_ProvideLocationUtilFactory implements Factory<LocationUtil> {
  private final ApplicationModule module;

  private final Provider<AppLocationUtil> appLocationUtilProvider;

  public ApplicationModule_ProvideLocationUtilFactory(ApplicationModule module,
      Provider<AppLocationUtil> appLocationUtilProvider) {
    this.module = module;
    this.appLocationUtilProvider = appLocationUtilProvider;
  }

  @Override
  public LocationUtil get() {
    return provideLocationUtil(module, appLocationUtilProvider.get());
  }

  public static ApplicationModule_ProvideLocationUtilFactory create(ApplicationModule module,
      Provider<AppLocationUtil> appLocationUtilProvider) {
    return new ApplicationModule_ProvideLocationUtilFactory(module, appLocationUtilProvider);
  }

  public static LocationUtil provideLocationUtil(ApplicationModule instance,
      AppLocationUtil appLocationUtil) {
    return Preconditions.checkNotNullFromProvides(instance.provideLocationUtil(appLocationUtil));
  }
}
