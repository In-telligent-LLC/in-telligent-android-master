// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.data;

import android.content.Context;
import com.sca.in_telligent.data.prefs.PreferencesHelper;
import com.sca.in_telligent.openapi.data.network.ApiHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("com.sca.in_telligent.di.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppDataManager_Factory implements Factory<AppDataManager> {
  private final Provider<Context> contextProvider;

  private final Provider<PreferencesHelper> preferencesHelperProvider;

  private final Provider<ApiHelper> apiHelperProvider;

  public AppDataManager_Factory(Provider<Context> contextProvider,
      Provider<PreferencesHelper> preferencesHelperProvider,
      Provider<ApiHelper> apiHelperProvider) {
    this.contextProvider = contextProvider;
    this.preferencesHelperProvider = preferencesHelperProvider;
    this.apiHelperProvider = apiHelperProvider;
  }

  @Override
  public AppDataManager get() {
    return newInstance(contextProvider.get(), preferencesHelperProvider.get(), apiHelperProvider.get());
  }

  public static AppDataManager_Factory create(Provider<Context> contextProvider,
      Provider<PreferencesHelper> preferencesHelperProvider,
      Provider<ApiHelper> apiHelperProvider) {
    return new AppDataManager_Factory(contextProvider, preferencesHelperProvider, apiHelperProvider);
  }

  public static AppDataManager newInstance(Context context, PreferencesHelper preferencesHelper,
      ApiHelper apiHelper) {
    return new AppDataManager(context, preferencesHelper, apiHelper);
  }
}
