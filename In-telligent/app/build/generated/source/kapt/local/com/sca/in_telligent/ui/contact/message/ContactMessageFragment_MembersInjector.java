// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.ui.contact.message;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ContactMessageFragment_MembersInjector implements MembersInjector<ContactMessageFragment> {
  private final Provider<ContactMessageMvpPresenter<ContactMessageMvpView>> mPresenterProvider;

  private final Provider<ContactMessageSpinnerAdapter> contactAlertSpinnerAdapterProvider;

  private final Provider<ContactMessageSpinnerAdapter> contactSendSpinnerAdapterProvider;

  public ContactMessageFragment_MembersInjector(
      Provider<ContactMessageMvpPresenter<ContactMessageMvpView>> mPresenterProvider,
      Provider<ContactMessageSpinnerAdapter> contactAlertSpinnerAdapterProvider,
      Provider<ContactMessageSpinnerAdapter> contactSendSpinnerAdapterProvider) {
    this.mPresenterProvider = mPresenterProvider;
    this.contactAlertSpinnerAdapterProvider = contactAlertSpinnerAdapterProvider;
    this.contactSendSpinnerAdapterProvider = contactSendSpinnerAdapterProvider;
  }

  public static MembersInjector<ContactMessageFragment> create(
      Provider<ContactMessageMvpPresenter<ContactMessageMvpView>> mPresenterProvider,
      Provider<ContactMessageSpinnerAdapter> contactAlertSpinnerAdapterProvider,
      Provider<ContactMessageSpinnerAdapter> contactSendSpinnerAdapterProvider) {
    return new ContactMessageFragment_MembersInjector(mPresenterProvider, contactAlertSpinnerAdapterProvider, contactSendSpinnerAdapterProvider);
  }

  @Override
  public void injectMembers(ContactMessageFragment instance) {
    injectMPresenter(instance, mPresenterProvider.get());
    injectContactAlertSpinnerAdapter(instance, contactAlertSpinnerAdapterProvider.get());
    injectContactSendSpinnerAdapter(instance, contactSendSpinnerAdapterProvider.get());
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.contact.message.ContactMessageFragment.mPresenter")
  public static void injectMPresenter(ContactMessageFragment instance,
      ContactMessageMvpPresenter<ContactMessageMvpView> mPresenter) {
    instance.mPresenter = mPresenter;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.contact.message.ContactMessageFragment.contactAlertSpinnerAdapter")
  public static void injectContactAlertSpinnerAdapter(ContactMessageFragment instance,
      ContactMessageSpinnerAdapter contactAlertSpinnerAdapter) {
    instance.contactAlertSpinnerAdapter = contactAlertSpinnerAdapter;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.contact.message.ContactMessageFragment.contactSendSpinnerAdapter")
  public static void injectContactSendSpinnerAdapter(ContactMessageFragment instance,
      ContactMessageSpinnerAdapter contactSendSpinnerAdapter) {
    instance.contactSendSpinnerAdapter = contactSendSpinnerAdapter;
  }
}
