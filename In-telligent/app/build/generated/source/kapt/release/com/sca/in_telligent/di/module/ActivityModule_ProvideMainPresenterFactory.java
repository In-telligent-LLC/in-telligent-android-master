// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.ui.main.MainMvpPresenter;
import com.sca.in_telligent.ui.main.MainMvpView;
import com.sca.in_telligent.ui.main.MainPresenter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("com.sca.in_telligent.di.PerActivity")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ActivityModule_ProvideMainPresenterFactory implements Factory<MainMvpPresenter<MainMvpView>> {
  private final ActivityModule module;

  private final Provider<MainPresenter<MainMvpView>> presenterProvider;

  public ActivityModule_ProvideMainPresenterFactory(ActivityModule module,
      Provider<MainPresenter<MainMvpView>> presenterProvider) {
    this.module = module;
    this.presenterProvider = presenterProvider;
  }

  @Override
  public MainMvpPresenter<MainMvpView> get() {
    return provideMainPresenter(module, presenterProvider.get());
  }

  public static ActivityModule_ProvideMainPresenterFactory create(ActivityModule module,
      Provider<MainPresenter<MainMvpView>> presenterProvider) {
    return new ActivityModule_ProvideMainPresenterFactory(module, presenterProvider);
  }

  public static MainMvpPresenter<MainMvpView> provideMainPresenter(ActivityModule instance,
      MainPresenter<MainMvpView> presenter) {
    return Preconditions.checkNotNullFromProvides(instance.provideMainPresenter(presenter));
  }
}
