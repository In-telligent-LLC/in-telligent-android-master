// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.ui.group.generate;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GenerateGroupFragment_MembersInjector implements MembersInjector<GenerateGroupFragment> {
  private final Provider<GenerateGroupMvpPresenter<GenerateGroupMvpView>> mPresenterProvider;

  public GenerateGroupFragment_MembersInjector(
      Provider<GenerateGroupMvpPresenter<GenerateGroupMvpView>> mPresenterProvider) {
    this.mPresenterProvider = mPresenterProvider;
  }

  public static MembersInjector<GenerateGroupFragment> create(
      Provider<GenerateGroupMvpPresenter<GenerateGroupMvpView>> mPresenterProvider) {
    return new GenerateGroupFragment_MembersInjector(mPresenterProvider);
  }

  @Override
  public void injectMembers(GenerateGroupFragment instance) {
    injectMPresenter(instance, mPresenterProvider.get());
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.group.generate.GenerateGroupFragment.mPresenter")
  public static void injectMPresenter(GenerateGroupFragment instance,
      GenerateGroupMvpPresenter<GenerateGroupMvpView> mPresenter) {
    instance.mPresenter = mPresenter;
  }
}
