// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.ui.contact.message.ContactMessageMvpPresenter;
import com.sca.in_telligent.ui.contact.message.ContactMessageMvpView;
import com.sca.in_telligent.ui.contact.message.ContactMessagePresenter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ActivityModule_ProvideContactMessagePresenterFactory implements Factory<ContactMessageMvpPresenter<ContactMessageMvpView>> {
  private final ActivityModule module;

  private final Provider<ContactMessagePresenter<ContactMessageMvpView>> presenterProvider;

  public ActivityModule_ProvideContactMessagePresenterFactory(ActivityModule module,
      Provider<ContactMessagePresenter<ContactMessageMvpView>> presenterProvider) {
    this.module = module;
    this.presenterProvider = presenterProvider;
  }

  @Override
  public ContactMessageMvpPresenter<ContactMessageMvpView> get() {
    return provideContactMessagePresenter(module, presenterProvider.get());
  }

  public static ActivityModule_ProvideContactMessagePresenterFactory create(ActivityModule module,
      Provider<ContactMessagePresenter<ContactMessageMvpView>> presenterProvider) {
    return new ActivityModule_ProvideContactMessagePresenterFactory(module, presenterProvider);
  }

  public static ContactMessageMvpPresenter<ContactMessageMvpView> provideContactMessagePresenter(
      ActivityModule instance, ContactMessagePresenter<ContactMessageMvpView> presenter) {
    return Preconditions.checkNotNullFromProvides(instance.provideContactMessagePresenter(presenter));
  }
}
