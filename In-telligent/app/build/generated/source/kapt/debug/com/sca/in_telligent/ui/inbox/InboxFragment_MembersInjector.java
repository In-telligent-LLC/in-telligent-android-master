// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.ui.inbox;

import androidx.recyclerview.widget.LinearLayoutManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class InboxFragment_MembersInjector implements MembersInjector<InboxFragment> {
  private final Provider<InboxAdapter> inboxAdapterProvider;

  private final Provider<InboxMvpPresenter<InboxMvpView>> mPresenterProvider;

  private final Provider<LinearLayoutManager> mLayoutManagerProvider;

  private final Provider<InboxSpinnerAdapter> inboxSpinnerAdapterProvider;

  public InboxFragment_MembersInjector(Provider<InboxAdapter> inboxAdapterProvider,
      Provider<InboxMvpPresenter<InboxMvpView>> mPresenterProvider,
      Provider<LinearLayoutManager> mLayoutManagerProvider,
      Provider<InboxSpinnerAdapter> inboxSpinnerAdapterProvider) {
    this.inboxAdapterProvider = inboxAdapterProvider;
    this.mPresenterProvider = mPresenterProvider;
    this.mLayoutManagerProvider = mLayoutManagerProvider;
    this.inboxSpinnerAdapterProvider = inboxSpinnerAdapterProvider;
  }

  public static MembersInjector<InboxFragment> create(Provider<InboxAdapter> inboxAdapterProvider,
      Provider<InboxMvpPresenter<InboxMvpView>> mPresenterProvider,
      Provider<LinearLayoutManager> mLayoutManagerProvider,
      Provider<InboxSpinnerAdapter> inboxSpinnerAdapterProvider) {
    return new InboxFragment_MembersInjector(inboxAdapterProvider, mPresenterProvider, mLayoutManagerProvider, inboxSpinnerAdapterProvider);
  }

  @Override
  public void injectMembers(InboxFragment instance) {
    injectInboxAdapter(instance, inboxAdapterProvider.get());
    injectMPresenter(instance, mPresenterProvider.get());
    injectMLayoutManager(instance, mLayoutManagerProvider.get());
    injectInboxSpinnerAdapter(instance, inboxSpinnerAdapterProvider.get());
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.inbox.InboxFragment.inboxAdapter")
  public static void injectInboxAdapter(InboxFragment instance, InboxAdapter inboxAdapter) {
    instance.inboxAdapter = inboxAdapter;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.inbox.InboxFragment.mPresenter")
  public static void injectMPresenter(InboxFragment instance,
      InboxMvpPresenter<InboxMvpView> mPresenter) {
    instance.mPresenter = mPresenter;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.inbox.InboxFragment.mLayoutManager")
  public static void injectMLayoutManager(InboxFragment instance,
      LinearLayoutManager mLayoutManager) {
    instance.mLayoutManager = mLayoutManager;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.inbox.InboxFragment.inboxSpinnerAdapter")
  public static void injectInboxSpinnerAdapter(InboxFragment instance,
      InboxSpinnerAdapter inboxSpinnerAdapter) {
    instance.inboxSpinnerAdapter = inboxSpinnerAdapter;
  }
}
