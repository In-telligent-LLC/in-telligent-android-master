// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.util;

import com.sca.in_telligent.data.DataManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppWeatherUtil_MembersInjector implements MembersInjector<AppWeatherUtil> {
  private final Provider<DataManager> dataManagerProvider;

  public AppWeatherUtil_MembersInjector(Provider<DataManager> dataManagerProvider) {
    this.dataManagerProvider = dataManagerProvider;
  }

  public static MembersInjector<AppWeatherUtil> create(Provider<DataManager> dataManagerProvider) {
    return new AppWeatherUtil_MembersInjector(dataManagerProvider);
  }

  @Override
  public void injectMembers(AppWeatherUtil instance) {
    injectDataManager(instance, dataManagerProvider.get());
  }

  @InjectedFieldSignature("com.sca.in_telligent.util.AppWeatherUtil.dataManager")
  public static void injectDataManager(AppWeatherUtil instance, DataManager dataManager) {
    instance.dataManager = dataManager;
  }
}
