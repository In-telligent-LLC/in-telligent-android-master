// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.ui.group.list;

import androidx.recyclerview.widget.LinearLayoutManager;
import com.sca.in_telligent.util.rx.SchedulerProvider;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GroupListFragment_MembersInjector implements MembersInjector<GroupListFragment> {
  private final Provider<GroupListAdapter> adapterProvider;

  private final Provider<LinearLayoutManager> mLayoutManagerProvider;

  private final Provider<GroupListMvpPresenter<GroupListMvpView>> mPresenterProvider;

  private final Provider<SchedulerProvider> schedulerProvider;

  private final Provider<GroupListSpinnerAdapter> spinnerAdapterProvider;

  public GroupListFragment_MembersInjector(Provider<GroupListAdapter> adapterProvider,
      Provider<LinearLayoutManager> mLayoutManagerProvider,
      Provider<GroupListMvpPresenter<GroupListMvpView>> mPresenterProvider,
      Provider<SchedulerProvider> schedulerProvider,
      Provider<GroupListSpinnerAdapter> spinnerAdapterProvider) {
    this.adapterProvider = adapterProvider;
    this.mLayoutManagerProvider = mLayoutManagerProvider;
    this.mPresenterProvider = mPresenterProvider;
    this.schedulerProvider = schedulerProvider;
    this.spinnerAdapterProvider = spinnerAdapterProvider;
  }

  public static MembersInjector<GroupListFragment> create(
      Provider<GroupListAdapter> adapterProvider,
      Provider<LinearLayoutManager> mLayoutManagerProvider,
      Provider<GroupListMvpPresenter<GroupListMvpView>> mPresenterProvider,
      Provider<SchedulerProvider> schedulerProvider,
      Provider<GroupListSpinnerAdapter> spinnerAdapterProvider) {
    return new GroupListFragment_MembersInjector(adapterProvider, mLayoutManagerProvider, mPresenterProvider, schedulerProvider, spinnerAdapterProvider);
  }

  @Override
  public void injectMembers(GroupListFragment instance) {
    injectAdapter(instance, adapterProvider.get());
    injectMLayoutManager(instance, mLayoutManagerProvider.get());
    injectMPresenter(instance, mPresenterProvider.get());
    injectSchedulerProvider(instance, schedulerProvider.get());
    injectSpinnerAdapter(instance, spinnerAdapterProvider.get());
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.group.list.GroupListFragment.adapter")
  public static void injectAdapter(GroupListFragment instance, GroupListAdapter adapter) {
    instance.adapter = adapter;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.group.list.GroupListFragment.mLayoutManager")
  public static void injectMLayoutManager(GroupListFragment instance,
      LinearLayoutManager mLayoutManager) {
    instance.mLayoutManager = mLayoutManager;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.group.list.GroupListFragment.mPresenter")
  public static void injectMPresenter(GroupListFragment instance,
      GroupListMvpPresenter<GroupListMvpView> mPresenter) {
    instance.mPresenter = mPresenter;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.group.list.GroupListFragment.schedulerProvider")
  public static void injectSchedulerProvider(GroupListFragment instance,
      SchedulerProvider schedulerProvider) {
    instance.schedulerProvider = schedulerProvider;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.group.list.GroupListFragment.spinnerAdapter")
  public static void injectSpinnerAdapter(GroupListFragment instance,
      GroupListSpinnerAdapter spinnerAdapter) {
    instance.spinnerAdapter = spinnerAdapter;
  }
}
