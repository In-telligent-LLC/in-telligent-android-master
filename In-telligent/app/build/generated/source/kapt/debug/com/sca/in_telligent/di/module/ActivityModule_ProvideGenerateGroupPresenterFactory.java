// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.ui.group.generate.GenerateGroupMvpPresenter;
import com.sca.in_telligent.ui.group.generate.GenerateGroupMvpView;
import com.sca.in_telligent.ui.group.generate.GenerateGroupPresenter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ActivityModule_ProvideGenerateGroupPresenterFactory implements Factory<GenerateGroupMvpPresenter<GenerateGroupMvpView>> {
  private final ActivityModule module;

  private final Provider<GenerateGroupPresenter<GenerateGroupMvpView>> presenterProvider;

  public ActivityModule_ProvideGenerateGroupPresenterFactory(ActivityModule module,
      Provider<GenerateGroupPresenter<GenerateGroupMvpView>> presenterProvider) {
    this.module = module;
    this.presenterProvider = presenterProvider;
  }

  @Override
  public GenerateGroupMvpPresenter<GenerateGroupMvpView> get() {
    return provideGenerateGroupPresenter(module, presenterProvider.get());
  }

  public static ActivityModule_ProvideGenerateGroupPresenterFactory create(ActivityModule module,
      Provider<GenerateGroupPresenter<GenerateGroupMvpView>> presenterProvider) {
    return new ActivityModule_ProvideGenerateGroupPresenterFactory(module, presenterProvider);
  }

  public static GenerateGroupMvpPresenter<GenerateGroupMvpView> provideGenerateGroupPresenter(
      ActivityModule instance, GenerateGroupPresenter<GenerateGroupMvpView> presenter) {
    return Preconditions.checkNotNullFromProvides(instance.provideGenerateGroupPresenter(presenter));
  }
}
