// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import androidx.appcompat.app.AppCompatActivity;
import com.google.android.gms.location.FusedLocationProviderClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ActivityModule_ProvideLocationProviderClientFactory implements Factory<FusedLocationProviderClient> {
  private final ActivityModule module;

  private final Provider<AppCompatActivity> activityProvider;

  public ActivityModule_ProvideLocationProviderClientFactory(ActivityModule module,
      Provider<AppCompatActivity> activityProvider) {
    this.module = module;
    this.activityProvider = activityProvider;
  }

  @Override
  public FusedLocationProviderClient get() {
    return provideLocationProviderClient(module, activityProvider.get());
  }

  public static ActivityModule_ProvideLocationProviderClientFactory create(ActivityModule module,
      Provider<AppCompatActivity> activityProvider) {
    return new ActivityModule_ProvideLocationProviderClientFactory(module, activityProvider);
  }

  public static FusedLocationProviderClient provideLocationProviderClient(ActivityModule instance,
      AppCompatActivity activity) {
    return Preconditions.checkNotNullFromProvides(instance.provideLocationProviderClient(activity));
  }
}
