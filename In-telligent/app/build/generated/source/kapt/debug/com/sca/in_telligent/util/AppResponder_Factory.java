// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.util;

import com.sca.in_telligent.data.DataManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppResponder_Factory implements Factory<AppResponder> {
  private final Provider<DataManager> dataManagerProvider;

  public AppResponder_Factory(Provider<DataManager> dataManagerProvider) {
    this.dataManagerProvider = dataManagerProvider;
  }

  @Override
  public AppResponder get() {
    AppResponder instance = newInstance();
    AppResponder_MembersInjector.injectDataManager(instance, dataManagerProvider.get());
    return instance;
  }

  public static AppResponder_Factory create(Provider<DataManager> dataManagerProvider) {
    return new AppResponder_Factory(dataManagerProvider);
  }

  public static AppResponder newInstance() {
    return new AppResponder();
  }
}
