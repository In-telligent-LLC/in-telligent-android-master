// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import android.content.Context;
import com.sca.in_telligent.openapi.util.FlashHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("com.sca.in_telligent.di.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ApplicationModule_ProvideFlashHelperFactory implements Factory<FlashHelper> {
  private final ApplicationModule module;

  private final Provider<Context> contextProvider;

  public ApplicationModule_ProvideFlashHelperFactory(ApplicationModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public FlashHelper get() {
    return provideFlashHelper(module, contextProvider.get());
  }

  public static ApplicationModule_ProvideFlashHelperFactory create(ApplicationModule module,
      Provider<Context> contextProvider) {
    return new ApplicationModule_ProvideFlashHelperFactory(module, contextProvider);
  }

  public static FlashHelper provideFlashHelper(ApplicationModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideFlashHelper(context));
  }
}
