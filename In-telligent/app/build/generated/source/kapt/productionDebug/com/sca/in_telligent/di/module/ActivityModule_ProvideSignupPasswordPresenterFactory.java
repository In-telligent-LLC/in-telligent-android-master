// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.ui.auth.register.SignupPasswordMvpPresenter;
import com.sca.in_telligent.ui.auth.register.SignupPasswordMvpView;
import com.sca.in_telligent.ui.auth.register.SignupPasswordPresenter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("com.sca.in_telligent.di.PerActivity")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ActivityModule_ProvideSignupPasswordPresenterFactory implements Factory<SignupPasswordMvpPresenter<SignupPasswordMvpView>> {
  private final ActivityModule module;

  private final Provider<SignupPasswordPresenter<SignupPasswordMvpView>> presenterProvider;

  public ActivityModule_ProvideSignupPasswordPresenterFactory(ActivityModule module,
      Provider<SignupPasswordPresenter<SignupPasswordMvpView>> presenterProvider) {
    this.module = module;
    this.presenterProvider = presenterProvider;
  }

  @Override
  public SignupPasswordMvpPresenter<SignupPasswordMvpView> get() {
    return provideSignupPasswordPresenter(module, presenterProvider.get());
  }

  public static ActivityModule_ProvideSignupPasswordPresenterFactory create(ActivityModule module,
      Provider<SignupPasswordPresenter<SignupPasswordMvpView>> presenterProvider) {
    return new ActivityModule_ProvideSignupPasswordPresenterFactory(module, presenterProvider);
  }

  public static SignupPasswordMvpPresenter<SignupPasswordMvpView> provideSignupPasswordPresenter(
      ActivityModule instance, SignupPasswordPresenter<SignupPasswordMvpView> presenter) {
    return Preconditions.checkNotNullFromProvides(instance.provideSignupPasswordPresenter(presenter));
  }
}
