// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.data.prefs.AppPreferencesHelper;
import com.sca.in_telligent.data.prefs.PreferencesHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ApplicationModule_ProvidePreferencesHelperFactory implements Factory<PreferencesHelper> {
  private final ApplicationModule module;

  private final Provider<AppPreferencesHelper> appPreferencesHelperProvider;

  public ApplicationModule_ProvidePreferencesHelperFactory(ApplicationModule module,
      Provider<AppPreferencesHelper> appPreferencesHelperProvider) {
    this.module = module;
    this.appPreferencesHelperProvider = appPreferencesHelperProvider;
  }

  @Override
  public PreferencesHelper get() {
    return providePreferencesHelper(module, appPreferencesHelperProvider.get());
  }

  public static ApplicationModule_ProvidePreferencesHelperFactory create(ApplicationModule module,
      Provider<AppPreferencesHelper> appPreferencesHelperProvider) {
    return new ApplicationModule_ProvidePreferencesHelperFactory(module, appPreferencesHelperProvider);
  }

  public static PreferencesHelper providePreferencesHelper(ApplicationModule instance,
      AppPreferencesHelper appPreferencesHelper) {
    return Preconditions.checkNotNullFromProvides(instance.providePreferencesHelper(appPreferencesHelper));
  }
}
