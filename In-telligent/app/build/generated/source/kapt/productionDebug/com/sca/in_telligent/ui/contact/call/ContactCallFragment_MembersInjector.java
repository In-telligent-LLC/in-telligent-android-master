// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.ui.contact.call;

import com.sca.in_telligent.util.twilio.TwilioUtil;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ContactCallFragment_MembersInjector implements MembersInjector<ContactCallFragment> {
  private final Provider<ContactCallMvpPresenter<ContactCallMvpView>> mPresenterProvider;

  private final Provider<TwilioUtil> twilioUtilProvider;

  public ContactCallFragment_MembersInjector(
      Provider<ContactCallMvpPresenter<ContactCallMvpView>> mPresenterProvider,
      Provider<TwilioUtil> twilioUtilProvider) {
    this.mPresenterProvider = mPresenterProvider;
    this.twilioUtilProvider = twilioUtilProvider;
  }

  public static MembersInjector<ContactCallFragment> create(
      Provider<ContactCallMvpPresenter<ContactCallMvpView>> mPresenterProvider,
      Provider<TwilioUtil> twilioUtilProvider) {
    return new ContactCallFragment_MembersInjector(mPresenterProvider, twilioUtilProvider);
  }

  @Override
  public void injectMembers(ContactCallFragment instance) {
    injectMPresenter(instance, mPresenterProvider.get());
    injectTwilioUtil(instance, twilioUtilProvider.get());
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.contact.call.ContactCallFragment.mPresenter")
  public static void injectMPresenter(ContactCallFragment instance,
      ContactCallMvpPresenter<ContactCallMvpView> mPresenter) {
    instance.mPresenter = mPresenter;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ui.contact.call.ContactCallFragment.twilioUtil")
  public static void injectTwilioUtil(ContactCallFragment instance, TwilioUtil twilioUtil) {
    instance.twilioUtil = twilioUtil;
  }
}
