// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent;

import android.media.AudioManager;
import com.sca.in_telligent.data.DataManager;
import com.sca.in_telligent.util.LifecycleInterface;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ScaApplication_MembersInjector implements MembersInjector<ScaApplication> {
  private final Provider<DataManager> mDataManagerProvider;

  private final Provider<LifecycleInterface> appLifecycleObserverProvider;

  private final Provider<AudioManager> audioManagerProvider;

  public ScaApplication_MembersInjector(Provider<DataManager> mDataManagerProvider,
      Provider<LifecycleInterface> appLifecycleObserverProvider,
      Provider<AudioManager> audioManagerProvider) {
    this.mDataManagerProvider = mDataManagerProvider;
    this.appLifecycleObserverProvider = appLifecycleObserverProvider;
    this.audioManagerProvider = audioManagerProvider;
  }

  public static MembersInjector<ScaApplication> create(Provider<DataManager> mDataManagerProvider,
      Provider<LifecycleInterface> appLifecycleObserverProvider,
      Provider<AudioManager> audioManagerProvider) {
    return new ScaApplication_MembersInjector(mDataManagerProvider, appLifecycleObserverProvider, audioManagerProvider);
  }

  @Override
  public void injectMembers(ScaApplication instance) {
    injectMDataManager(instance, mDataManagerProvider.get());
    injectAppLifecycleObserver(instance, appLifecycleObserverProvider.get());
    injectAudioManager(instance, audioManagerProvider.get());
  }

  @InjectedFieldSignature("com.sca.in_telligent.ScaApplication.mDataManager")
  public static void injectMDataManager(ScaApplication instance, DataManager mDataManager) {
    instance.mDataManager = mDataManager;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ScaApplication.appLifecycleObserver")
  public static void injectAppLifecycleObserver(ScaApplication instance,
      LifecycleInterface appLifecycleObserver) {
    instance.appLifecycleObserver = appLifecycleObserver;
  }

  @InjectedFieldSignature("com.sca.in_telligent.ScaApplication.audioManager")
  public static void injectAudioManager(ScaApplication instance, AudioManager audioManager) {
    instance.audioManager = audioManager;
  }
}
