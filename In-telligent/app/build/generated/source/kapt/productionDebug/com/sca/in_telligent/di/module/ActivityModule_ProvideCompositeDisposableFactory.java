// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.reactivex.rxjava3.disposables.CompositeDisposable;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ActivityModule_ProvideCompositeDisposableFactory implements Factory<CompositeDisposable> {
  private final ActivityModule module;

  public ActivityModule_ProvideCompositeDisposableFactory(ActivityModule module) {
    this.module = module;
  }

  @Override
  public CompositeDisposable get() {
    return provideCompositeDisposable(module);
  }

  public static ActivityModule_ProvideCompositeDisposableFactory create(ActivityModule module) {
    return new ActivityModule_ProvideCompositeDisposableFactory(module);
  }

  public static CompositeDisposable provideCompositeDisposable(ActivityModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideCompositeDisposable());
  }
}
