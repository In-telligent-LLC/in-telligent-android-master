// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.util.AppVideoDownloader;
import com.sca.in_telligent.util.VideoDownloader;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ApplicationModule_ProvideVideoDownloaderFactory implements Factory<VideoDownloader> {
  private final ApplicationModule module;

  private final Provider<AppVideoDownloader> appVideoDownloaderProvider;

  public ApplicationModule_ProvideVideoDownloaderFactory(ApplicationModule module,
      Provider<AppVideoDownloader> appVideoDownloaderProvider) {
    this.module = module;
    this.appVideoDownloaderProvider = appVideoDownloaderProvider;
  }

  @Override
  public VideoDownloader get() {
    return provideVideoDownloader(module, appVideoDownloaderProvider.get());
  }

  public static ApplicationModule_ProvideVideoDownloaderFactory create(ApplicationModule module,
      Provider<AppVideoDownloader> appVideoDownloaderProvider) {
    return new ApplicationModule_ProvideVideoDownloaderFactory(module, appVideoDownloaderProvider);
  }

  public static VideoDownloader provideVideoDownloader(ApplicationModule instance,
      AppVideoDownloader appVideoDownloader) {
    return Preconditions.checkNotNullFromProvides(instance.provideVideoDownloader(appVideoDownloader));
  }
}
