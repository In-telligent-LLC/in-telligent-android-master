// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import androidx.work.WorkManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ApplicationModule_ProvideWorkManagerFactory implements Factory<WorkManager> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideWorkManagerFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public WorkManager get() {
    return provideWorkManager(module);
  }

  public static ApplicationModule_ProvideWorkManagerFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideWorkManagerFactory(module);
  }

  public static WorkManager provideWorkManager(ApplicationModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideWorkManager());
  }
}
