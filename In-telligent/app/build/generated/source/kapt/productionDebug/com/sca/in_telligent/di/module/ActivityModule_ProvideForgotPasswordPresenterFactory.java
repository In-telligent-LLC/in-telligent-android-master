// Generated by Dagger (https://dagger.dev).
package com.sca.in_telligent.di.module;

import com.sca.in_telligent.ui.auth.forgot.ForgotPasswordMvpPresenter;
import com.sca.in_telligent.ui.auth.forgot.ForgotPasswordMvpView;
import com.sca.in_telligent.ui.auth.forgot.ForgotPasswordPresenter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ActivityModule_ProvideForgotPasswordPresenterFactory implements Factory<ForgotPasswordMvpPresenter<ForgotPasswordMvpView>> {
  private final ActivityModule module;

  private final Provider<ForgotPasswordPresenter<ForgotPasswordMvpView>> presenterProvider;

  public ActivityModule_ProvideForgotPasswordPresenterFactory(ActivityModule module,
      Provider<ForgotPasswordPresenter<ForgotPasswordMvpView>> presenterProvider) {
    this.module = module;
    this.presenterProvider = presenterProvider;
  }

  @Override
  public ForgotPasswordMvpPresenter<ForgotPasswordMvpView> get() {
    return provideForgotPasswordPresenter(module, presenterProvider.get());
  }

  public static ActivityModule_ProvideForgotPasswordPresenterFactory create(ActivityModule module,
      Provider<ForgotPasswordPresenter<ForgotPasswordMvpView>> presenterProvider) {
    return new ActivityModule_ProvideForgotPasswordPresenterFactory(module, presenterProvider);
  }

  public static ForgotPasswordMvpPresenter<ForgotPasswordMvpView> provideForgotPasswordPresenter(
      ActivityModule instance, ForgotPasswordPresenter<ForgotPasswordMvpView> presenter) {
    return Preconditions.checkNotNullFromProvides(instance.provideForgotPasswordPresenter(presenter));
  }
}
