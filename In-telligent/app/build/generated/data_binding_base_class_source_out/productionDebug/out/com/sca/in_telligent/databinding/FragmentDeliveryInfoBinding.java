// Generated by view binder compiler. Do not edit!
package com.sca.in_telligent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sca.in_telligent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDeliveryInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout deliveryInfoCellLayout;

  @NonNull
  public final TextView deliveryInfoInfoText;

  @NonNull
  public final TextView deliveryInfoNameField;

  @NonNull
  public final TextView deliveryInfoReceivedField;

  @NonNull
  public final RecyclerView deliveryInfoRecyclerview;

  @NonNull
  public final TextView deliveryInfoTitleText;

  @NonNull
  public final TextView deliveryInfoViewedField;

  @NonNull
  public final Guideline guidelineFirst;

  @NonNull
  public final Guideline guidelineLeft;

  @NonNull
  public final Guideline guidelineRight;

  @NonNull
  public final Guideline guidelineSecond;

  private FragmentDeliveryInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout deliveryInfoCellLayout, @NonNull TextView deliveryInfoInfoText,
      @NonNull TextView deliveryInfoNameField, @NonNull TextView deliveryInfoReceivedField,
      @NonNull RecyclerView deliveryInfoRecyclerview, @NonNull TextView deliveryInfoTitleText,
      @NonNull TextView deliveryInfoViewedField, @NonNull Guideline guidelineFirst,
      @NonNull Guideline guidelineLeft, @NonNull Guideline guidelineRight,
      @NonNull Guideline guidelineSecond) {
    this.rootView = rootView;
    this.deliveryInfoCellLayout = deliveryInfoCellLayout;
    this.deliveryInfoInfoText = deliveryInfoInfoText;
    this.deliveryInfoNameField = deliveryInfoNameField;
    this.deliveryInfoReceivedField = deliveryInfoReceivedField;
    this.deliveryInfoRecyclerview = deliveryInfoRecyclerview;
    this.deliveryInfoTitleText = deliveryInfoTitleText;
    this.deliveryInfoViewedField = deliveryInfoViewedField;
    this.guidelineFirst = guidelineFirst;
    this.guidelineLeft = guidelineLeft;
    this.guidelineRight = guidelineRight;
    this.guidelineSecond = guidelineSecond;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDeliveryInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDeliveryInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_delivery_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDeliveryInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delivery_info_cell_layout;
      ConstraintLayout deliveryInfoCellLayout = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoCellLayout == null) {
        break missingId;
      }

      id = R.id.delivery_info_info_text;
      TextView deliveryInfoInfoText = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoInfoText == null) {
        break missingId;
      }

      id = R.id.delivery_info_name_field;
      TextView deliveryInfoNameField = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoNameField == null) {
        break missingId;
      }

      id = R.id.delivery_info_received_field;
      TextView deliveryInfoReceivedField = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoReceivedField == null) {
        break missingId;
      }

      id = R.id.delivery_info_recyclerview;
      RecyclerView deliveryInfoRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoRecyclerview == null) {
        break missingId;
      }

      id = R.id.delivery_info_title_text;
      TextView deliveryInfoTitleText = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoTitleText == null) {
        break missingId;
      }

      id = R.id.delivery_info_viewed_field;
      TextView deliveryInfoViewedField = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoViewedField == null) {
        break missingId;
      }

      id = R.id.guideline_first;
      Guideline guidelineFirst = ViewBindings.findChildViewById(rootView, id);
      if (guidelineFirst == null) {
        break missingId;
      }

      id = R.id.guideline_left;
      Guideline guidelineLeft = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLeft == null) {
        break missingId;
      }

      id = R.id.guideline_right;
      Guideline guidelineRight = ViewBindings.findChildViewById(rootView, id);
      if (guidelineRight == null) {
        break missingId;
      }

      id = R.id.guideline_second;
      Guideline guidelineSecond = ViewBindings.findChildViewById(rootView, id);
      if (guidelineSecond == null) {
        break missingId;
      }

      return new FragmentDeliveryInfoBinding((ConstraintLayout) rootView, deliveryInfoCellLayout,
          deliveryInfoInfoText, deliveryInfoNameField, deliveryInfoReceivedField,
          deliveryInfoRecyclerview, deliveryInfoTitleText, deliveryInfoViewedField, guidelineFirst,
          guidelineLeft, guidelineRight, guidelineSecond);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
