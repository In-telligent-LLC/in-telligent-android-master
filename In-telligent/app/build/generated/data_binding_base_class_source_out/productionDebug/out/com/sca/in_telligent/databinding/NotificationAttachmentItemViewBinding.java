// Generated by view binder compiler. Do not edit!
package com.sca.in_telligent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sca.in_telligent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationAttachmentItemViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageviewDocumentType;

  @NonNull
  public final TextView notificationAttachmentDocumentTitle;

  @NonNull
  public final ImageView notificationAttachmentThumbnailImage;

  @NonNull
  public final FrameLayout notificationAttachmentThumbnailImageContainer;

  private NotificationAttachmentItemViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageviewDocumentType,
      @NonNull TextView notificationAttachmentDocumentTitle,
      @NonNull ImageView notificationAttachmentThumbnailImage,
      @NonNull FrameLayout notificationAttachmentThumbnailImageContainer) {
    this.rootView = rootView;
    this.imageviewDocumentType = imageviewDocumentType;
    this.notificationAttachmentDocumentTitle = notificationAttachmentDocumentTitle;
    this.notificationAttachmentThumbnailImage = notificationAttachmentThumbnailImage;
    this.notificationAttachmentThumbnailImageContainer = notificationAttachmentThumbnailImageContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationAttachmentItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationAttachmentItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_attachment_item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationAttachmentItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageview_document_type;
      ImageView imageviewDocumentType = ViewBindings.findChildViewById(rootView, id);
      if (imageviewDocumentType == null) {
        break missingId;
      }

      id = R.id.notification_attachment_document_title;
      TextView notificationAttachmentDocumentTitle = ViewBindings.findChildViewById(rootView, id);
      if (notificationAttachmentDocumentTitle == null) {
        break missingId;
      }

      id = R.id.notification_attachment_thumbnail_image;
      ImageView notificationAttachmentThumbnailImage = ViewBindings.findChildViewById(rootView, id);
      if (notificationAttachmentThumbnailImage == null) {
        break missingId;
      }

      id = R.id.notification_attachment_thumbnail_image_container;
      FrameLayout notificationAttachmentThumbnailImageContainer = ViewBindings.findChildViewById(rootView, id);
      if (notificationAttachmentThumbnailImageContainer == null) {
        break missingId;
      }

      return new NotificationAttachmentItemViewBinding((ConstraintLayout) rootView,
          imageviewDocumentType, notificationAttachmentDocumentTitle,
          notificationAttachmentThumbnailImage, notificationAttachmentThumbnailImageContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
