// Generated by view binder compiler. Do not edit!
package com.sca.in_telligent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sca.in_telligent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNotificationDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guidelineLeft;

  @NonNull
  public final Guideline guidelineRight;

  @NonNull
  public final RecyclerView notificationDetailAttachmentList;

  @NonNull
  public final TextView notificationDetailAttachmentText;

  @NonNull
  public final ImageView notificationDetailBackButton;

  @NonNull
  public final RelativeLayout notificationDetailBackLayout;

  @NonNull
  public final View notificationDetailBottomDivider;

  @NonNull
  public final TextView notificationDetailDescriptionText;

  @NonNull
  public final TextView notificationDetailInfoText;

  @NonNull
  public final ImageView notificationDetailLeftArrow;

  @NonNull
  public final ImageView notificationDetailRightArrow;

  @NonNull
  public final TextView notificationDetailSave;

  @NonNull
  public final TextView notificationDetailTitleText;

  @NonNull
  public final TextView notificationDetailTranslate;

  @NonNull
  public final TextView notificationDetailTts;

  private FragmentNotificationDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guidelineLeft, @NonNull Guideline guidelineRight,
      @NonNull RecyclerView notificationDetailAttachmentList,
      @NonNull TextView notificationDetailAttachmentText,
      @NonNull ImageView notificationDetailBackButton,
      @NonNull RelativeLayout notificationDetailBackLayout,
      @NonNull View notificationDetailBottomDivider,
      @NonNull TextView notificationDetailDescriptionText,
      @NonNull TextView notificationDetailInfoText, @NonNull ImageView notificationDetailLeftArrow,
      @NonNull ImageView notificationDetailRightArrow, @NonNull TextView notificationDetailSave,
      @NonNull TextView notificationDetailTitleText, @NonNull TextView notificationDetailTranslate,
      @NonNull TextView notificationDetailTts) {
    this.rootView = rootView;
    this.guidelineLeft = guidelineLeft;
    this.guidelineRight = guidelineRight;
    this.notificationDetailAttachmentList = notificationDetailAttachmentList;
    this.notificationDetailAttachmentText = notificationDetailAttachmentText;
    this.notificationDetailBackButton = notificationDetailBackButton;
    this.notificationDetailBackLayout = notificationDetailBackLayout;
    this.notificationDetailBottomDivider = notificationDetailBottomDivider;
    this.notificationDetailDescriptionText = notificationDetailDescriptionText;
    this.notificationDetailInfoText = notificationDetailInfoText;
    this.notificationDetailLeftArrow = notificationDetailLeftArrow;
    this.notificationDetailRightArrow = notificationDetailRightArrow;
    this.notificationDetailSave = notificationDetailSave;
    this.notificationDetailTitleText = notificationDetailTitleText;
    this.notificationDetailTranslate = notificationDetailTranslate;
    this.notificationDetailTts = notificationDetailTts;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNotificationDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNotificationDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_notification_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNotificationDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline_left;
      Guideline guidelineLeft = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLeft == null) {
        break missingId;
      }

      id = R.id.guideline_right;
      Guideline guidelineRight = ViewBindings.findChildViewById(rootView, id);
      if (guidelineRight == null) {
        break missingId;
      }

      id = R.id.notification_detail_attachment_list;
      RecyclerView notificationDetailAttachmentList = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailAttachmentList == null) {
        break missingId;
      }

      id = R.id.notification_detail_attachment_text;
      TextView notificationDetailAttachmentText = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailAttachmentText == null) {
        break missingId;
      }

      id = R.id.notification_detail_back_button;
      ImageView notificationDetailBackButton = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailBackButton == null) {
        break missingId;
      }

      id = R.id.notification_detail_back_layout;
      RelativeLayout notificationDetailBackLayout = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailBackLayout == null) {
        break missingId;
      }

      id = R.id.notification_detail_bottom_divider;
      View notificationDetailBottomDivider = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailBottomDivider == null) {
        break missingId;
      }

      id = R.id.notification_detail_description_text;
      TextView notificationDetailDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailDescriptionText == null) {
        break missingId;
      }

      id = R.id.notification_detail_info_text;
      TextView notificationDetailInfoText = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailInfoText == null) {
        break missingId;
      }

      id = R.id.notification_detail_left_arrow;
      ImageView notificationDetailLeftArrow = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailLeftArrow == null) {
        break missingId;
      }

      id = R.id.notification_detail_right_arrow;
      ImageView notificationDetailRightArrow = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailRightArrow == null) {
        break missingId;
      }

      id = R.id.notification_detail_save;
      TextView notificationDetailSave = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailSave == null) {
        break missingId;
      }

      id = R.id.notification_detail_title_text;
      TextView notificationDetailTitleText = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailTitleText == null) {
        break missingId;
      }

      id = R.id.notification_detail_translate;
      TextView notificationDetailTranslate = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailTranslate == null) {
        break missingId;
      }

      id = R.id.notification_detail_tts;
      TextView notificationDetailTts = ViewBindings.findChildViewById(rootView, id);
      if (notificationDetailTts == null) {
        break missingId;
      }

      return new FragmentNotificationDetailBinding((ConstraintLayout) rootView, guidelineLeft,
          guidelineRight, notificationDetailAttachmentList, notificationDetailAttachmentText,
          notificationDetailBackButton, notificationDetailBackLayout,
          notificationDetailBottomDivider, notificationDetailDescriptionText,
          notificationDetailInfoText, notificationDetailLeftArrow, notificationDetailRightArrow,
          notificationDetailSave, notificationDetailTitleText, notificationDetailTranslate,
          notificationDetailTts);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
