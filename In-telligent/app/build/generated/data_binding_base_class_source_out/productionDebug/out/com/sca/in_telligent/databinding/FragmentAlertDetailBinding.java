// Generated by view binder compiler. Do not edit!
package com.sca.in_telligent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sca.in_telligent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAlertDetailBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView alertDetailAttachmentText;

  @NonNull
  public final TextView alertDetailDeliveryButton;

  @NonNull
  public final TextView alertDetailDescriptionText;

  @NonNull
  public final TextView alertDetailInfoText;

  @NonNull
  public final TextView alertDetailTitleText;

  @NonNull
  public final Guideline guidelineBottom;

  @NonNull
  public final Guideline guidelineLeft;

  @NonNull
  public final Guideline guidelineLeftButton;

  @NonNull
  public final Guideline guidelineRight;

  @NonNull
  public final Guideline guidelineRightButton;

  private FragmentAlertDetailBinding(@NonNull ScrollView rootView,
      @NonNull TextView alertDetailAttachmentText, @NonNull TextView alertDetailDeliveryButton,
      @NonNull TextView alertDetailDescriptionText, @NonNull TextView alertDetailInfoText,
      @NonNull TextView alertDetailTitleText, @NonNull Guideline guidelineBottom,
      @NonNull Guideline guidelineLeft, @NonNull Guideline guidelineLeftButton,
      @NonNull Guideline guidelineRight, @NonNull Guideline guidelineRightButton) {
    this.rootView = rootView;
    this.alertDetailAttachmentText = alertDetailAttachmentText;
    this.alertDetailDeliveryButton = alertDetailDeliveryButton;
    this.alertDetailDescriptionText = alertDetailDescriptionText;
    this.alertDetailInfoText = alertDetailInfoText;
    this.alertDetailTitleText = alertDetailTitleText;
    this.guidelineBottom = guidelineBottom;
    this.guidelineLeft = guidelineLeft;
    this.guidelineLeftButton = guidelineLeftButton;
    this.guidelineRight = guidelineRight;
    this.guidelineRightButton = guidelineRightButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAlertDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAlertDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_alert_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAlertDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alert_detail_attachment_text;
      TextView alertDetailAttachmentText = ViewBindings.findChildViewById(rootView, id);
      if (alertDetailAttachmentText == null) {
        break missingId;
      }

      id = R.id.alert_detail_delivery_button;
      TextView alertDetailDeliveryButton = ViewBindings.findChildViewById(rootView, id);
      if (alertDetailDeliveryButton == null) {
        break missingId;
      }

      id = R.id.alert_detail_description_text;
      TextView alertDetailDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (alertDetailDescriptionText == null) {
        break missingId;
      }

      id = R.id.alert_detail_info_text;
      TextView alertDetailInfoText = ViewBindings.findChildViewById(rootView, id);
      if (alertDetailInfoText == null) {
        break missingId;
      }

      id = R.id.alert_detail_title_text;
      TextView alertDetailTitleText = ViewBindings.findChildViewById(rootView, id);
      if (alertDetailTitleText == null) {
        break missingId;
      }

      id = R.id.guideline_bottom;
      Guideline guidelineBottom = ViewBindings.findChildViewById(rootView, id);
      if (guidelineBottom == null) {
        break missingId;
      }

      id = R.id.guideline_left;
      Guideline guidelineLeft = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLeft == null) {
        break missingId;
      }

      id = R.id.guideline_left_button;
      Guideline guidelineLeftButton = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLeftButton == null) {
        break missingId;
      }

      id = R.id.guideline_right;
      Guideline guidelineRight = ViewBindings.findChildViewById(rootView, id);
      if (guidelineRight == null) {
        break missingId;
      }

      id = R.id.guideline_right_button;
      Guideline guidelineRightButton = ViewBindings.findChildViewById(rootView, id);
      if (guidelineRightButton == null) {
        break missingId;
      }

      return new FragmentAlertDetailBinding((ScrollView) rootView, alertDetailAttachmentText,
          alertDetailDeliveryButton, alertDetailDescriptionText, alertDetailInfoText,
          alertDetailTitleText, guidelineBottom, guidelineLeft, guidelineLeftButton, guidelineRight,
          guidelineRightButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
