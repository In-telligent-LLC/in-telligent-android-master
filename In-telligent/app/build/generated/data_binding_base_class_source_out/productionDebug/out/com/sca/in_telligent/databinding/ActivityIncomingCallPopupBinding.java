// Generated by view binder compiler. Do not edit!
package com.sca.in_telligent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Chronometer;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sca.in_telligent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityIncomingCallPopupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Chronometer chronometer;

  @NonNull
  public final ConstraintLayout incomingCallAcceptCall;

  @NonNull
  public final ImageView incomingCallAcceptImage;

  @NonNull
  public final TextView incomingCallAcceptText;

  @NonNull
  public final TextView incomingCallCenterText;

  @NonNull
  public final ConstraintLayout incomingCallRejectCall;

  @NonNull
  public final ImageView incomingCallRejectImage;

  @NonNull
  public final TextView incomingCallRejectText;

  private ActivityIncomingCallPopupBinding(@NonNull ConstraintLayout rootView,
      @NonNull Chronometer chronometer, @NonNull ConstraintLayout incomingCallAcceptCall,
      @NonNull ImageView incomingCallAcceptImage, @NonNull TextView incomingCallAcceptText,
      @NonNull TextView incomingCallCenterText, @NonNull ConstraintLayout incomingCallRejectCall,
      @NonNull ImageView incomingCallRejectImage, @NonNull TextView incomingCallRejectText) {
    this.rootView = rootView;
    this.chronometer = chronometer;
    this.incomingCallAcceptCall = incomingCallAcceptCall;
    this.incomingCallAcceptImage = incomingCallAcceptImage;
    this.incomingCallAcceptText = incomingCallAcceptText;
    this.incomingCallCenterText = incomingCallCenterText;
    this.incomingCallRejectCall = incomingCallRejectCall;
    this.incomingCallRejectImage = incomingCallRejectImage;
    this.incomingCallRejectText = incomingCallRejectText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIncomingCallPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIncomingCallPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_incoming_call_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIncomingCallPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chronometer;
      Chronometer chronometer = ViewBindings.findChildViewById(rootView, id);
      if (chronometer == null) {
        break missingId;
      }

      id = R.id.incoming_call_accept_call;
      ConstraintLayout incomingCallAcceptCall = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallAcceptCall == null) {
        break missingId;
      }

      id = R.id.incoming_call_accept_image;
      ImageView incomingCallAcceptImage = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallAcceptImage == null) {
        break missingId;
      }

      id = R.id.incoming_call_accept_text;
      TextView incomingCallAcceptText = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallAcceptText == null) {
        break missingId;
      }

      id = R.id.incoming_call_center_text;
      TextView incomingCallCenterText = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallCenterText == null) {
        break missingId;
      }

      id = R.id.incoming_call_reject_call;
      ConstraintLayout incomingCallRejectCall = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallRejectCall == null) {
        break missingId;
      }

      id = R.id.incoming_call_reject_image;
      ImageView incomingCallRejectImage = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallRejectImage == null) {
        break missingId;
      }

      id = R.id.incoming_call_reject_text;
      TextView incomingCallRejectText = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallRejectText == null) {
        break missingId;
      }

      return new ActivityIncomingCallPopupBinding((ConstraintLayout) rootView, chronometer,
          incomingCallAcceptCall, incomingCallAcceptImage, incomingCallAcceptText,
          incomingCallCenterText, incomingCallRejectCall, incomingCallRejectImage,
          incomingCallRejectText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
