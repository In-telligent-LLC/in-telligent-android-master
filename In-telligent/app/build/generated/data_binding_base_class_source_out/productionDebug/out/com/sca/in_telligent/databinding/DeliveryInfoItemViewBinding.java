// Generated by view binder compiler. Do not edit!
package com.sca.in_telligent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sca.in_telligent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeliveryInfoItemViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView deliveryInfoItemName;

  @NonNull
  public final ImageView deliveryInfoItemReceived;

  @NonNull
  public final ImageView deliveryInfoItemViewed;

  @NonNull
  public final Guideline guidelineFirst;

  @NonNull
  public final Guideline guidelineSecond;

  private DeliveryInfoItemViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView deliveryInfoItemName, @NonNull ImageView deliveryInfoItemReceived,
      @NonNull ImageView deliveryInfoItemViewed, @NonNull Guideline guidelineFirst,
      @NonNull Guideline guidelineSecond) {
    this.rootView = rootView;
    this.deliveryInfoItemName = deliveryInfoItemName;
    this.deliveryInfoItemReceived = deliveryInfoItemReceived;
    this.deliveryInfoItemViewed = deliveryInfoItemViewed;
    this.guidelineFirst = guidelineFirst;
    this.guidelineSecond = guidelineSecond;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeliveryInfoItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeliveryInfoItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.delivery_info_item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeliveryInfoItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delivery_info_item_name;
      TextView deliveryInfoItemName = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoItemName == null) {
        break missingId;
      }

      id = R.id.delivery_info_item_received;
      ImageView deliveryInfoItemReceived = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoItemReceived == null) {
        break missingId;
      }

      id = R.id.delivery_info_item_viewed;
      ImageView deliveryInfoItemViewed = ViewBindings.findChildViewById(rootView, id);
      if (deliveryInfoItemViewed == null) {
        break missingId;
      }

      id = R.id.guideline_first;
      Guideline guidelineFirst = ViewBindings.findChildViewById(rootView, id);
      if (guidelineFirst == null) {
        break missingId;
      }

      id = R.id.guideline_second;
      Guideline guidelineSecond = ViewBindings.findChildViewById(rootView, id);
      if (guidelineSecond == null) {
        break missingId;
      }

      return new DeliveryInfoItemViewBinding((ConstraintLayout) rootView, deliveryInfoItemName,
          deliveryInfoItemReceived, deliveryInfoItemViewed, guidelineFirst, guidelineSecond);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
